name: Development Build and Deploy

on: workflow_dispatch

jobs:
  connection-test:
    name: Test VPS connection
    runs-on: ubuntu-latest
    steps:
      - name: Execute remote command on vps
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          username: ${{ secrets.DEVELOPMENT_USERNAME }}
          password: ${{ secrets.DEVELOPMENT_PASSWORD }}
          script: whoami

  website-build:
    name: Build website
    needs: connection-test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Fetch LFS assets
        run: git lfs checkout

      - name: Use Node.js 15.8.0
        uses: actions/setup-node@v2-beta
        with:
          node-version: '15.8.0'

      - name: Building website
        run: |
          yarn
          yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: website-artifact
          path: public/

  website-deploy:
    name: Deploy website
    needs: website-build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: website-artifact
          path: public/

      - name: Use Node.js 15.8.0
        uses: actions/setup-node@v2-beta
        with:
          node-version: '15.8.0'

      - name: Upload website files
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEVELOPMENT_PRIVATE_KEY }}
          SOURCE: 'public/'
          REMOTE_HOST: ${{ secrets.DEVELOPMENT_HOST }}
          REMOTE_USER: ${{ secrets.DEVELOPMENT_USERNAME }}
          TARGET: '/home/deployer/website/public_html'
          EXCLUDE: 'yarn.lock'

  api-build:
    name: Build API
    needs: connection-test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Fetch LFS assets
        run: git lfs checkout

      - name: Use Node.js 15.8.0
        uses: actions/setup-node@v2-beta
        with:
          node-version: '15.8.0'

      - name: Building API
        run: |
          cd src/api/
          yarn
          cd ../..
          yarn api-build

      - name: Upload api artifact
        uses: actions/upload-artifact@v2
        with:
          name: api-artifact
          path: |
            src/api/dist/
            src/api/package.json

  api-deploy:
    name: Deploy API
    needs: api-build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: api-artifact
          path: source/

      - name: Stop current API process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          username: ${{ secrets.DEVELOPMENT_USERNAME }}
          password: ${{ secrets.DEVELOPMENT_PASSWORD }}
          script: |
            cd /home/deployer/backend/
            pm2 stop API
            pm2 delete API

      - name: Upload backend files
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEVELOPMENT_PRIVATE_KEY }}
          SOURCE: 'source/'
          REMOTE_HOST: ${{ secrets.DEVELOPMENT_HOST }}
          REMOTE_USER: ${{ secrets.DEVELOPMENT_USERNAME }}
          TARGET: '/home/deployer/backend'

  api-start:
    name: Start API
    needs: api-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          username: ${{ secrets.DEVELOPMENT_USERNAME }}
          password: ${{ secrets.DEVELOPMENT_PASSWORD }}
          script: |
            cd /home/deployer/backend/
            npm install

      - name: Start app with pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          username: ${{ secrets.DEVELOPMENT_USERNAME }}
          password: ${{ secrets.DEVELOPMENT_PASSWORD }}
          script: |
            cd /home/deployer/backend/
            pm2 start index.js --name API --watch
